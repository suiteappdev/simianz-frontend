//region Imports
'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

global.__CLIENT__ = false;

var _require = require('..');

var Live = _require.Live;

//endregion

describe('Live', function () {

  beforeEach(function () {
    var _this = this;

    this.beforeCb = sinon.spy();
    this.afterCb = sinon.spy();
    var self = this;
    this.fooModule = {
      $name: 'foo',
      register: function register(live) {
        live.before('start', function callee$3$0() {
          return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
            while (1) switch (context$4$0.prev = context$4$0.next) {
              case 0:
                self.beforeCb();

              case 1:
              case 'end':
                return context$4$0.stop();
            }
          }, null, _this);
        });
        live.after('start', function callee$3$0() {
          return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
            while (1) switch (context$4$0.prev = context$4$0.next) {
              case 0:
                self.afterCb();

              case 1:
              case 'end':
                return context$4$0.stop();
            }
          }, null, _this);
        });
      }
    };
  });

  it('simple register', function (done) {
    var self = this;
    var live = new Live();
    this.fooModule.register(live);
    live.start().then(function () {
      self.beforeCb.should.have.been.calledBefore(self.afterCb);
      done();
    });
  });

  it('register', function (done) {
    var self = this;
    var live = new Live();
    live.register(this.fooModule);
    live.start().then(function () {
      self.beforeCb.should.have.been.calledBefore(self.afterCb);
      done();
    });
  });

  it('use global live instance', function () {
    var self = this;

    var _require2 = require('..');

    var live = _require2.live;

    live.register(this.fooModule);
    live.start().then(function () {
      self.beforeCb.should.have.been.calledBefore(self.afterCb);
      done();
    });
  });
});
//# sourceMappingURL=index-test.js.map
