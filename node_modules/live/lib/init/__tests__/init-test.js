//region Imports
'use strict';

var mock = require('mock-fs');
var init = require('..');
var fs = require('fs');
//endregion

describe.only('Init', function () {

  beforeEach(function () {

    // For `babel/register`, and webpack.
    var liverc = {
      globals: {},
      moduleDirectories: ['modules']
    };

    var livercStr = 'module.exports = ' + JSON.stringify(liverc);

    function makeApp() {
      return {
        'package.json': 'TODO',
        '.liverc': livercStr,
        'modules': {
          foo: {
            'live.js': 'module.exports = function(live) { return "foo" }'
          },
          bar: {
            'live.js': 'module.exports = function(live) { return "bar" }'
          }
        }
      };
    }

    // Create test dir structure.
    var testDir = {};
    testDir['/parentApp'] = makeApp();
    testDir['/parentApp/modules/childApp'] = makeApp();

    // DEBUG: DISABLED -
    //mock(testDir)
  });

  it('should work', function () {
    //init()
  });

  afterEach(function () {
    //mock.restore()
  });
});
//# sourceMappingURL=init-test.js.map
