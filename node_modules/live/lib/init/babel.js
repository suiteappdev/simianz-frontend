//
// TODO(vjpr): There are two separate caches. Require resolution and babel transpiled source. Separate them!
//

//region Imports
'use strict';

var debug = require('debug')('live-babel');
var roadrunner = require('roadrunner');
var fs = require('fs-extra');
var _ = require('lodash');
//endregion

var roadrunnerCacheFile;
var run = false;

var getRequireResolveCache = function getRequireResolveCache() {
  var babel = roadrunner.get('babel');
  return babel;
};

var saveRequireResolveCache = function saveRequireResolveCache() {
  roadrunner.save(roadrunnerCacheFile);
  debug('Saved cache');
};

module.exports = function () {
  var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  _.defaults(opts.babel, {
    stage: 0,
    extensions: ['.js'],
    cache: true,
    blacklist: ['useStrict'],
    //optional: ['asyncToGenerator'],
    optional: ['bluebirdCoroutines']
  });

  opts.roadrunner = opts.roadrunner || {};
  _.defaults(opts.roadrunner, {
    roadrunnerCacheFile: process.cwd() + '/tmp/.roadrunner.json'
  });

  fs.ensureFileSync(opts.roadrunner.roadrunnerCacheFile);
  roadrunner.load(opts.roadrunner.roadrunnerCacheFile);

  require('babel/register')(_.clone(opts.babel));

  require('babel-core/external-helpers');

  process.on('SIGINT', function () {

    saveRequireResolveCache();

    // NOTE: `babel/register` cache hooks into `process.on('exit')`
    // and process.nextTick`.
    // The process exit hook doesnt't fire when we use CMD+C. Not sure why.
    // Maybe something to do with another module, or nodemon, or something.
    // For now, we manually trigger exit which fixes it.

    // TODO: This seems to cause bad exit for nodemon.
    // Maybe try process.emit('exit') ?

    process.exit();
  });
};

module.exports.getRequireResolveCache = getRequireResolveCache;
module.exports.saveRequireResolveCache = saveRequireResolveCache;
//# sourceMappingURL=babel.js.map
