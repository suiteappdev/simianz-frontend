//region Imports
'use strict';

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _globby = require('globby');

var _globby2 = _interopRequireDefault(_globby);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

//endregion

var PluginLocator = (function () {
  function PluginLocator() {
    var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    _classCallCheck(this, PluginLocator);

    this.opts = _lodash2['default'].defaults(opts, {
      exts: ['json', 'cson', 'js'],
      folders: ['node_modules', 'modules'],
      //files: ['live.browser', 'live.shared', 'live'],
      files: ['live.shared', 'live'],
      rootDir: process.cwd()
    });
  }

  _createClass(PluginLocator, [{
    key: 'getGlob',
    value: function getGlob() {
      var files = this.opts.files.join('|');
      var dirs = this.opts.folders.join('|');
      var exts = this.opts.exts.join('|');
      return this.opts.rootDir + ('/@(' + dirs + ')/*/@(' + files + ').@(' + exts + ')');
    }
  }, {
    key: 'locate',
    value: function locate() {
      console.log(this.getGlob());
      var paths = _globby2['default'].sync(this.getGlob());
      return paths;
    }
  }]);

  return PluginLocator;
})();

var main = function main(opts) {
  return new PluginLocator(opts).locate();
};

main.PluginLocator = PluginLocator;

module.exports = main;
//# sourceMappingURL=index.js.map
