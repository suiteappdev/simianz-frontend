// Start timing server startup time asap.
global.liveStartTime = new Date
console.log('Starting app...')

//region Imports
const _ = require('lodash')
const config = require('configurize')
//endregion

module.exports = function(opts = {}) {

  // TODO(vjpr): Use opts instead of config to set defaults.

  // NODE_PATH
  //////////////////////////////////////////////////////////////////////////////

  if (!__CLIENT__) {
    const addPath = require('app-module-path').addPath
    config.live.moduleDirectories.map((dir) => {
      addPath(dir)
    })
  }

  // Module aliases
  //////////////////////////////////////////////////////////////////////////////

  // Globals
  //////////////////////////////////////////////////////////////////////////////

  _(config.live.globals).each((v, k) => { global[k] = v }).run()

  // TODO

  // Skip style requires when server side.
  //////////////////////////////////////////////////////////////////////////////

  // TODO(vjpr): Use style collector and serve css.
  if (!__CLIENT__) require.extensions['.less'] = function() { return null }
  if (!__CLIENT__) require.extensions['.css'] = function() { return null }

  // Unhandled promises
  //////////////////////////////////////////////////////////////////////////////

  // Capture unhandler promise rejections.
  // NOTE: Requires io.js or core-js.
  process.on('unhandledRejection', function(e, promise) {
    console.log(e.stack)
  })
  // TODO: Fire rejection events in the browser.
  // See: https://github.com/petkaantonov/bluebird/blob/master/API.md#global-rejection-events

  // Babel
  //////////////////////////////////////////////////////////////////////////////

  // Save cached roadrunner after server starts and *most* of the dependencies
  // have been loaded.
  //require('./babel').saveRequireResolveCache()
  if (!__CLIENT__) require('./babel')(config.live)

}
